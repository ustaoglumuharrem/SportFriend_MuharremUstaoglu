// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportFriend.Data;

namespace SportFriend.Migrations
{
    [DbContext(typeof(SportFriendDb))]
    [Migration("20191230201104_initialdb")]
    partial class initialdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportFriend.Data.Demands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Demands");
                });

            modelBuilder.Entity("SportFriend.Data.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventCreator")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2")
                        .HasMaxLength(100);

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FriendUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FriendUserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SportFriend.Data.FriendUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("FriendUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1995, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Muharrem",
                            Password = "7ed44ba2e34347320e794c9c897c26ba78c6e98ffeef5303715de062da2d0936",
                            RoleId = 1,
                            Surname = "Ustaoglu",
                            UserName = "Muharrem"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1997, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Melike",
                            Password = "8eb1597386bef1052725a0b67a809818b3b3eb20c76d41c2390373d83ed0ffd3",
                            RoleId = 2,
                            Surname = "Yılmaz",
                            UserName = "Melike"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1997, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kemal",
                            Password = "7f21551bb56b76e58e915fe896ff6e94e58fedd72ebeaa49b39d616f9262e9ac",
                            RoleId = 2,
                            Surname = "Karahan",
                            UserName = "Kemal"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1997, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yusuf Mert",
                            Password = "29b49c02d38c638f33a7b730298d90530298720314300a1558915363524a29be",
                            RoleId = 2,
                            Surname = "Bal",
                            UserName = "YMB"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1990, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ferhat",
                            Password = "ca5197dac80d256f47799fa36ddeb63cf3ba392c7d9c4f0a0160d85406989dba",
                            RoleId = 2,
                            Surname = "Ören",
                            UserName = "Ferhat"
                        });
                });

            modelBuilder.Entity("SportFriend.Data.RoleIdentification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateDemand")
                        .HasColumnType("int");

                    b.Property<int>("CreateEvent")
                        .HasColumnType("int");

                    b.Property<int>("LookDemand")
                        .HasColumnType("int");

                    b.Property<int>("LookEvent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoleIdentifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDemand = 1,
                            CreateEvent = 1,
                            LookDemand = 1,
                            LookEvent = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDemand = 1,
                            CreateEvent = 0,
                            LookDemand = 1,
                            LookEvent = 1
                        });
                });

            modelBuilder.Entity("SportFriend.Data.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleIdentification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleContent = "Admin",
                            RoleIdentification = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleContent = "User",
                            RoleIdentification = 2
                        });
                });

            modelBuilder.Entity("SportFriend.Data.Events", b =>
                {
                    b.HasOne("SportFriend.Data.FriendUser", "FriendUser")
                        .WithMany()
                        .HasForeignKey("FriendUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
